buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        repositories {
    		maven {
    		url "https://plugins.gradle.org/m2/"
      
    		}
  		}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        //classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
//apply plugin: 'org.spongepowered.mixin'
repositories {
    jcenter()
    maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }// Maybe needed for other mods in the future
    maven { url "https://maven.latmod.com/" } //FTB
}
version = "1.0.0-1.14"
group = "de.erdbeerbaerlp.dcintegration" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "dcintegration"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
	
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20190621-1.14.2'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dcintegration {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dcintegration {
                    source sourceSets.main
                }
            }
        }
    }
}
configurations {
    embed
    compile.extendsFrom(embed)
    contained
}
dependencies {
	minecraft 'net.minecraftforge:forge:1.14.2-26.0.63'
	/*embed("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
    }*/
    embed("net.dv8tion:JDA:3.8.3_463"){
        transitive = false
    }
    //Dependencies for JDA
    embed 'com.squareup.okhttp3:okhttp:3.13.0'
    embed 'com.neovisionaries:nv-websocket-client:2.5'
    embed 'org.slf4j:slf4j-api:1.7.25'
    contained 'org.apache.commons:commons-collections4:4.1'
    contained 'net.sf.trove4j:trove4j:3.0.3'
    embed 'org.json:json:20160810'
    embed 'org.jetbrains:annotations:16.0.1'
    //deobfCompile "com.feed_the_beast.mods:FTBUtilities:5.4.0.97"
   // deobfCompile "com.feed_the_beast.mods:FTBLib:5.+"
}
/*mixin {
    add sourceSets.main, 'mixins.dcintegration.refmap.json'
}*/
jar {
	//dependsOn shadowJar
    from(configurations.embed.findAll { !it.name.endsWith('pom') }.collect {
       it.isDirectory() ? it : zipTree(it)
    }) {

        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
    into('META-INF/libraries'){
		from configurations.contained
	}
    manifest {
        attributes([
                'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis(),
        		"Specification-Title": "dcintegration",
            	"Specification-Vendor": "dcintegration",
            	"Specification-Version": "1", // We are version 1 of ourselves
            	"Implementation-Title": project.name,
            	"Implementation-Version": "${version}",
            	"Implementation-Vendor" :"dcintegration",
            	"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            	'ContainedDeps': configurations.contained.collect { it.getName() }.join(' ')
        ])
    }
}
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
